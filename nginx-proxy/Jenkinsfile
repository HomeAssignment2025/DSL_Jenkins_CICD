pipeline {
  agent {
    kubernetes {
      label 'jenkins-docker-agent'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: docker:24.0.2
    command:
    - cat
    tty: true
    volumeMounts:
    - name: docker-sock
      mountPath: /var/run/docker.sock
  volumes:
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
"""
    }
  }

  environment {
    IMAGE_NAME = "youruser/nginx-proxy"
    TAG = "latest"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Docker Image') {
      steps {
        container('docker') {
          script {
            sh "docker version"
            sh "docker build -t ${IMAGE_NAME}:${TAG} ./nginx-proxy"
          }
        }
      }
    }

    stage('Push to Docker Hub') {
      steps {
        container('docker') {
          withDockerRegistry([ credentialsId: 'docker-hub-creds', url: '' ]) {
            sh "docker push ${IMAGE_NAME}:${TAG}"
          }
        }
      }
    }
  }

  post {
    success {
      echo "✅ Successfully built and pushed ${IMAGE_NAME}:${TAG}"
    }
    failure {
      echo "❌ Build failed for ${IMAGE_NAME}:${TAG}"
    }
  }
}



// pipeline {
//     agent any

//     parameters {
//         string(name: 'DOCKER_IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag')
//         string(name: 'DOCKER_IMAGE_NAME', defaultValue: 'nginx-proxy', description: 'Docker image name')
//         string(name: 'DOCKERHUB_USER', defaultValue: 'youruser', description: 'DockerHub username')
//     }

//     environment {
//         IMAGE_NAME = "${params.DOCKERHUB_USER}/${params.DOCKER_IMAGE_NAME}:${params.DOCKER_IMAGE_TAG}"
//     }

//     stages {
//         stage('Checkout') {
//             steps {
//                 checkout scm
//             }
//         }

//         stage('Build Docker Image') {
//             steps {
//                 script {
//                     docker.build("${env.IMAGE_NAME}", ".")
//                 }
//             }
//         }

//         stage('Push to Docker Hub') {
//             steps {
//                 withDockerRegistry(credentialsId: 'dockerhub-creds', url: '') {
//                     script {
//                         docker.image("${env.IMAGE_NAME}").push()
//                     }
//                 }
//             }
//         }
//     }

//     post {
//         success {
//             echo "✅ Nginx proxy image pushed: ${env.IMAGE_NAME}"
//         }
//         failure {
//             echo "❌ Build failed for ${env.IMAGE_NAME}"
//         }
//     }
// }

